{"version":3,"sources":["main.js"],"names":["gameGrid","s","setup","createCanvas","console","table","enterRandomNumber","draw","background","w","i","j","noFill","strokeWeight","stroke","rect","val","fill","textSize","textAlign","CENTER","text","keyPressed","flipped","rotated","keyCode","DOWN_ARROW","UP_ARROW","flip","RIGHT_ARROW","rotateTheGrid","LEFT_ARROW","past","copyGrid","operate","changed","compare","newGrid","extra","a","b","reverse","row","slide","combineVals","arr","filter","missing","length","zeros","Array","concat","options","push","x","y","spot","random","r","myp5","p5"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["\nlet gameGrid;\nvar s = function () {\n    setup = function () {\n        createCanvas(400, 400);\n        gameGrid = [\n            [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]\n        ];\n        console.table(gameGrid);\n        enterRandomNumber();\n        enterRandomNumber();\n        console.table(gameGrid);\n    }\n\n    draw = function () {\n        background(255);\n        let w = 100;\n        for (i = 0; i < 4; i++) {\n            for (j = 0; j < 4; j++) {\n                noFill();\n                strokeWeight(2);\n                stroke(0);\n                rect(i * w, j * w, w, w);\n                let val = gameGrid[i][j];\n                if (gameGrid[i][j] !== 0) {\n                    fill(0);\n                    textSize(64);\n                    textAlign(CENTER, CENTER);\n                    text(val, i * w + w / 2, j * w + w / 2);\n                }\n            }\n        }\n    }\n\n    keyPressed = function () {\n        let flipped = false;\n        let rotated = false;\n        switch (keyCode) {\n            case DOWN_ARROW:\n                break;\n            case UP_ARROW:\n                gameGrid = flip(gameGrid);\n                flipped = true;\n                break;\n            case RIGHT_ARROW:\n                gameGrid = rotateTheGrid(gameGrid);\n                rotated = true;\n                // flipped = false;\n                break;\n            case LEFT_ARROW:\n                gameGrid = rotateTheGrid(gameGrid);\n                gameGrid = flip(gameGrid);\n                rotated = true;\n                flipped = true;\n                break;\n            default:\n                // later\n        }\n\n        let past = copyGrid(gameGrid);\n        for (let i = 0; i < 4; i++) {\n            gameGrid[i] = operate(gameGrid[i]);\n        }\n        let changed = compare(past, gameGrid);\n        if (flipped) {\n            gameGrid = flip(gameGrid);\n        }\n        if (rotated) {\n            gameGrid = rotateTheGrid(gameGrid);\n          }\n        if (changed) {\n            enterRandomNumber();\n        }\n    }\n\n    function rotateTheGrid(gameGrid) {\n        let newGrid = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                newGrid[i][j] = gameGrid[j][i];\n            }\n        }\n        return newGrid;\n    }\n\n    function copyGrid(gameGrid) {\n        let extra = [\n            [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]\n        ];\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                extra[i][j] = gameGrid[i][j];\n            }\n        }\n        return extra;\n    }\n\n    function compare(a, b) {\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                if (a[i][j] !== b[i][j]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function flip(gameGrid) {\n        for (let i = 0; i < 4; i++) {\n            gameGrid[i].reverse();\n        }\n        return gameGrid;\n    }\n\n    function operate(row) {\n        row = slide(row);\n        row = combineVals(row);\n        row = slide(row);\n        return row;\n    }\n\n    function combineVals(row) {\n        for (let i = 3; i >= 1; i--) {\n            let a = row[i];\n            let b = row[i - 1];\n            if (a == b) {\n                row[i] = a + b;\n                // score += row[i];\n                row[i - 1] = 0;\n                break;\n            }\n        }\n        return row;\n    }\n\n    function slide(row) {\n        let arr = row.filter(val => val);\n        let missing = 4 - arr.length;\n        let zeros = Array(missing).fill(0);\n        arr = zeros.concat(arr);\n        return arr;\n    }\n}\n\nfunction enterRandomNumber() {\n    let options = [];\n    for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n            if (gameGrid[i][j] === 0) {\n                options.push({\n                    x: i,\n                    y: j\n                });\n            }\n        }\n    }\n    if (options.length > 0) {\n        let spot = random(options);\n        let r = random(1);\n        gameGrid[spot.x][spot.y] = r > 0.1 ? 2 : 4;\n        // grid_new[spot.x][spot.y] = 1;\n    }\n}\n\nvar myp5 = new p5(s);\n\n"]}